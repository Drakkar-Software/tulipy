name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install OpenBLAS (macos)
        if: matrix.os == 'macOS-latest'
        run: |
          pip cache remove numpy
          brew install openblas
          echo "OPENBLAS=$(brew --prefix openblas)" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.5.0

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip setuptools build wheel
          python -m pip install -r requirements.txt
          python -m build -s -o dist/

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every commit to master
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/master'
    # upload to PyPI on every tag
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    # alternatively, to publish on every tag starting with 'v', use the following rule:
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Upload to test PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.pypi_test_password }}
          repository_url: https://test.pypi.org/legacy/

      # - name: Upload to PyPI
      #   uses: pypa/gh-action-pypi-publish@v1.4.2
      #   with:
      #     user: __token__
      #     password: ${{ secrets.pypi_password }}
