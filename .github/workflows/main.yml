name: OctoBot Tulipy - Build and push
on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:

jobs:
  tests:
    name: ${{ matrix.os }}${{ matrix.arch }} - ${{ matrix.type }} - tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        arch: [ x64 ]
        type: [ cython ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.X'
        architecture: ${{ matrix.arch }}

    - name: Install dependencies
      run: pip install --prefer-binary -r dev_requirements.txt -r requirements.txt

    - name: Compile project
      run: |
        python setup.py build_ext --inplace
        python setup.py install

    - name: Tests
      run: python tests/test.py

  build_wheels:
    needs: tests
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v3

      - uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'

      - name: Install OpenBLAS (macos)
        if: matrix.os == 'macOS-latest'
        run: |
          brew install openblas
          echo "OPENBLAS=$(brew --prefix openblas)" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_SKIP: "cp27-* cp36-* pp27-*"
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_ARCHS_WINDOWS: "auto64"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    needs: tests
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10.X'

      - name: Build sdist
        run: |
          python -m pip install --upgrade pip setuptools build wheel
          python -m pip install -r requirements.txt
          python -m build -s -o dist/

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}

  notify:
    if: ${{ failure() }}
    needs:
      - tests
      - publish
    uses: Drakkar-Software/.github/.github/workflows/failure_notify_workflow.yml@master
    secrets:
      DISCORD_GITHUB_WEBHOOK: ${{ secrets.DISCORD_GITHUB_WEBHOOK }}
